---
# tasks file for docker

## Repo setups
- name: "Add docker-CE repo for RHEL-based OS"
  become: yes
  yum_repository:
    #TODO: Maybe download "https://download.docker.com/linux/centos/docker-ce.repo"
    #baseurl: "https://download.docker.com/linux/centos/$releasever/$basearch/stable"
    baseurl: "https://download.docker.com/linux/centos/{{ ansible_distribution_major_version }}/$basearch/stable"
    enabled: yes
    description: "Docker CE stable (from ansible)"
    gpgcheck: yes
    file: "docker-ce"
    name: "docker-ce-stable"
    gpgkey: "https://download.docker.com/linux/centos/gpg"
  when: "(ansible_os_family == 'RedHat') or (ansible_os_family == 'Rocky')"

- name: "Install EPEL for RHEL-based operating systems"
  become: yes
  package:
    name: "epel-relase"
    state: "present"
    update_cache: yes
  when: "(ansible_os_family == 'RedHat') or (ansible_os_family == 'Rocky')"

- name: "Enable CRB-repository for RHEL-based operating systems"
  become: yes
  shell:
    cmd: "/usr/bin/crb enable"
  when: "(ansible_os_family == 'RedHat') or (ansible_os_family == 'Rocky')"
  #TODO: When not crb in stat.somefile

- name: "Add Docker GPG key in Debian keychain"
  apt_key:
    url: "https://download.docker.com/linux/debian/gpg"
    state: present
  become: yes
  when: "ansible_distribution == 'Debian'"

- name: "Add Docker GPG key in Ubuntu keychain"
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
  become: yes
  when: "ansible_distribution == 'Ubuntu'"

- name: "Add docker-CE repo for Debian-based OS"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_lsb.codename }} stable"
    state: present
  become: yes
  when: "ansible_distribution == 'Debian'"

- name: "Add docker-CE repo for Ubuntu-based OS"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
  become: yes
  when: "ansible_distribution == 'Ubuntu'"

# Remove this if issues with podman
# dnf remove @container-tools
- name: "Make sure podman is not installed"
  when: no # Pending debug
  package:
    name: "@container-tools"
    state: "absent"
  become: yes
  ignore_errors: yes

- name: "Make sure podman is not installed to interfere with docker"
  become: yes
  package:
    name: "podman,podman-compose,containers-common" #TODO: removed @container-tools, does not exist?
    state: "absent"

- name: "Install packages."
  package:
    name: "{{ docker.packages }}"
    state: "present"
    update_cache: yes
  become: yes

- name: "Render the daemon config-file"
  template:
    src: "daemon.json.j2"
    dest: "/etc/docker/daemon.json"
  become: yes
  notify: "Restart docker"

- name: "Add user {{ docker_user }} to the docker-group"
  user:
    name: "{{ docker_user }}"
    groups: "docker"
    append: yes
  become: yes

- name: "Create a docker data-directory in {{ docker_user }} home-directory"
  file:
    path: "/home/{{ docker_user }}/docker-data"
    state: directory
  become: yes
  become_user: "{{ docker_user }}"

- name: "Enable the docker service"
  service:
    name: "{{ docker.service.name }}"
    enabled: yes
    state: "started"
  become: yes

- name: "Enable the docker service"
  service:
    name: "{{ docker.service.name }}"
    enabled: yes
    state: "started"
  become: yes
